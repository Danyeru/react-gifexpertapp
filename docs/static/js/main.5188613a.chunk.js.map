{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","image","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","item","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAc9C,OACI,0BAAMC,SARW,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,OAKZ,2BACEO,KAAK,OACLC,YAAY,6BACZC,MAAOV,EACPW,SAjBkB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDAEuBC,UAAUH,GAFjC,+DAGHI,MAAMF,GAHH,cAGfG,EAHe,gBAIEA,EAAIC,OAJN,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAOH,EAAII,OAAOC,iBAAiBb,QAVlB,kBAcdM,GAdc,4CAAH,sDCEPQ,EAAc,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAElC,OACE,yBAAKI,UAAU,0CACb,yBAAKC,IAAKL,EAAOM,IAAKP,IACtB,2BAAIA,KCHGQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNc,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GACtBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGZ,CAACrB,IAEGsB,EDb0BK,CAAa3B,GAAjCc,EAD0B,EAC/BP,KAAac,EADkB,EAClBA,QAErB,OACE,oCACE,wBAAIJ,UAAU,qCAAqCjB,GAClDqB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aACZH,EAAOL,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEQzBmB,EAjBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,cADrB,mBAClB6C,EADkB,KACN9C,EADM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG8C,EAAWrB,KAAI,SAACsB,GAAD,OACd,kBAAC,EAAD,CAAS/B,SAAU+B,EAAMH,IAAKG,UCTxCC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.5188613a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(inputValue.trim().length > 2){\n      setCategories((cats) => [ inputValue, ...cats])\n      setInputValue('')\n    }\n  };\n  return (\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Agrega un nueva categoria \"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n      </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n\n","export const getGifs = async (category) => {\n  const url =\n    `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=7zdBDYKv2v8M43wKQ9y9BY6rC9BrJBCx`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      image: img.images.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};","import React from \"react\";\n\nexport const GifGridItem = ({title, image }) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={image} alt={title}/>\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data:images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state; // {data: [], loading: true}\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((item) => (\n          <GifGrid category={item} key={item} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}